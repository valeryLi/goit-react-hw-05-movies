{"version":3,"file":"static/js/611.a959d305.chunk.js","mappings":"yPAEaA,EAAaC,EAAAA,GAAAA,GAAH,yVAUVC,EAAeD,EAAAA,GAAAA,EAAH,sKASZE,EAASF,EAAAA,GAAAA,KAAH,4GAONG,EAAcH,EAAAA,GAAAA,GAAH,mFAMXI,EAAgBJ,EAAAA,GAAAA,EAAH,0G,SCxBbK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,SAACH,EAAD,UACGG,EAAQC,KAAI,SAAAC,GACX,OACE,UAACT,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,sBACCM,EAAOC,WAEV,SAACL,EAAD,UAAgBI,EAAOE,YALRF,EAAOG,GAQ3B,KAGN,E,2BC1BYC,EAAgB,SAAAC,GAC3B,OAAOA,EAAMN,KAAI,kBAA8B,CAC7CI,GADe,EAAGA,GAElBF,OAFe,EAAOA,OAGtBC,QAHe,EAAeA,QAAf,GAKlB,E,SCJYI,EAAoBd,EAAAA,GAAAA,IAAH,oiBCmC9B,EA7BgB,WACd,OAA8Be,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACED,GAAa,GADf,UAE6BE,EAAAA,EAAAA,IAAkBL,GAF/C,OAEQM,EAFR,OAGQC,EAAiBZ,EAAcW,GAErCP,EAAWQ,GACXJ,GAAa,GANf,4CADc,uBAAC,WAAD,wBASdK,EACD,GAAE,CAACR,KAGF,UAACH,EAAD,WACGK,IAAa,SAACO,EAAA,EAAD,IACM,IAAnBpB,EAAQqB,QAAiBR,GAGxB,SAACd,EAAD,CAAcC,QAASA,KAFvB,6DAMP,C,+LCjCKsB,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAEoBC,EAAAA,EAAAA,GAAM,sBAAuB,CAClDC,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BrB,GAA9B,iGAEoBa,EAAAA,EAAAA,GAAM,SAAD,OAAUb,GAAW,CAC/Cc,OAAQ,CACNC,QAASJ,EACTjB,GAAIM,KALL,cAEGgB,EAFH,yBAQIA,EAASC,MARb,gCAUHE,QAAQC,MAAR,MAVG,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iGAEoBV,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTY,MAAAA,KALD,cAEGP,EAFH,yBAQIA,EAASC,KAAKC,SARlB,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCxB,GAAhC,iGAEoBa,EAAAA,EAAAA,GAAM,SAAD,OAAUb,EAAV,YAA6B,CACvDc,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKQ,MAPlB,gCASHN,QAAQC,MAAR,MATG,gFAaA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,iGAEoBa,EAAAA,EAAAA,GAAM,SAAD,OAAUb,EAAV,YAA6B,CACvDc,OAAQ,CACNC,QAASJ,KAJV,cAEGK,EAFH,yBAOIA,EAASC,KAAKC,SAPlB,gCASHC,QAAQC,MAAR,MATG,gFAxDPP,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","utils/reviewsMapper.js","pages/ReviewsSubPage/Rieviews.styled.js","pages/ReviewsSubPage/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  box-shadow: 0px 3px 3px 0px rgba(124, 185, 232, 0.12),\n    0px 3px 6px 0px rgba(124, 185, 232, 0.22),\n    0px 5px 10px 0px rgba(124, 185, 232, 0.2),\n    0px 8px 12px 1px rgba(124, 185, 232, 0.19);\n  background-color: rgba(124, 185, 232, 0.5);\n  border: 1px solid rgba(124, 185, 232, 0.03);\n  border-radius: 6px;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-family: Simple Games;\n  font-size: 28px;\n  font-weight: bold;\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const Author = styled.span`\n  font-family: Road;\n  margin-right: 10px;\n  font-size: 26px;\n  color: #2d144c;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ReviewContent = styled.p`\n  font-family: Sendang;\n  font-size: 20px;\n  padding: 20px;\n  color: #1c2186;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  ReviewItem,\n  ReviewAuthor,\n  Author,\n  ReviewsList,\n  ReviewContent,\n} from './MovieReviews.styled';\n\nexport const MovieReviews = ({ reviews }) => {\n  return (\n    <ReviewsList>\n      {reviews.map(review => {\n        return (\n          <ReviewItem key={review.id}>\n            <ReviewAuthor>\n              <Author>Author:</Author>\n              {review.author}\n            </ReviewAuthor>\n            <ReviewContent>{review.content}</ReviewContent>\n          </ReviewItem>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nMovieReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string,\n    }).isRequired\n  ),\n};\n","export const reviewsMapper = array => {\n  return array.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n};\n","import styled from 'styled-components';\n\nexport const RieviewsContainer = styled.div`\n  width: 80%;\n  margin: 10px auto;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 3px 3px 0px rgba(65, 105, 225, 0.12),\n    0px 3px 6px 0px rgba(65, 105, 225, 0.22),\n    0px 5px 10px 0px rgba(65, 105, 225, 0.2),\n    0px 8px 12px 1px rgba(65, 105, 225, 0.19);\n  background-color: rgba(65, 105, 225, 0.5);\n  border: 1px solid rgba(65, 105, 225, 0.03);\n\n  @media (min-width: 480px) {\n    padding: 10px;\n    width: 85%;\n  }\n  @media (min-width: 1200px) {\n    width: 60%;\n    margin: 20px auto;\n  }\n`;\n","import { MovieReviews } from 'components/MovieReviews/MovieReviews';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/moviesApi';\nimport { reviewsMapper } from 'utils/reviewsMapper';\nimport { Loader } from 'components/Loader/Loader';\nimport { RieviewsContainer } from './Rieviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function searchReviews() {\n      setIsLoading(true);\n      const reviewsArray = await fetchMovieReviews(movieId);\n      const filtredReviews = reviewsMapper(reviewsArray);\n\n      setReviews(filtredReviews);\n      setIsLoading(false);\n    }\n    searchReviews();\n  }, [movieId]);\n\n  return (\n    <RieviewsContainer>\n      {isLoading && <Loader />}\n      {reviews.length === 0 && !isLoading ? (\n        <p>Sorry, there are no reviews yet</p>\n      ) : (\n        <MovieReviews reviews={reviews} />\n      )}\n    </RieviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '68d4d93a5383af68a17fffcfb4da1936';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMovies() {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieActors(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["ReviewItem","styled","ReviewAuthor","Author","ReviewsList","ReviewContent","MovieReviews","reviews","map","review","author","content","id","reviewsMapper","array","RieviewsContainer","useState","setReviews","movieId","useParams","isLoading","setIsLoading","useEffect","fetchMovieReviews","reviewsArray","filtredReviews","searchReviews","Loader","length","API_KEY","fetchMovies","axios","params","api_key","response","data","results","console","error","fetchMovieById","fetchMovieByQuery","query","fetchMovieActors","cast"],"sourceRoot":""}