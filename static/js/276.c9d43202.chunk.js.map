{"version":3,"file":"static/js/276.c9d43202.chunk.js","mappings":"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","sources":["components/ActorCard/ActorCard.styled.js","components/ActorCard/ActorCard.jsx","components/ActorsList/ActorsList.styled.js","components/ActorsList/ActorsList.jsx","utils/actorsMapper.js","pages/CastSubPage/Cast.styled.js","pages/CastSubPage/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorImage = styled.img`\n  width: 200px;\n`;\n\nexport const ActorInfo = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  border-bottom: 1px solid aqua;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  text-align: center;\n  gap: 5px;\n  padding-bottom: 10px;\n`;\n\nexport const ActorName = styled.p`\n  font-family: Road;\n  font-size: 20px;\n  color: #2d144c;\n`;\n\nexport const Character = styled.p`\n  font-family: Sendang;\n  color: #1c2186;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  ActorImage,\n  ActorInfo,\n  ActorName,\n  Character,\n} from './ActorCard.styled';\n\nexport const ActorCard = ({ name, character, profile }) => {\n  return (\n    <>\n      <ActorImage\n        src={\n          profile\n            ? `https://image.tmdb.org/t/p/w500${profile}`\n            : `https://vcunited.club/wp-content/uploads/2020/01/No-image-available-2.jpg`\n        }\n        alt={name}\n        width={280}\n        height={430}\n      />\n      <ActorInfo>\n        <ActorName>{name}</ActorName>\n        <Character>{character}</Character>\n      </ActorInfo>\n    </>\n  );\n};\n\nActorCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  profile: PropTypes.string,\n  character: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ActorsListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const ActorsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  width: 200px;\n`;\n","import PropTypes from 'prop-types';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\nimport { ActorsListStyled, ActorsListItem } from './ActorsList.styled';\n\nexport const ActorsList = ({ actors }) => {\n  return (\n    <ActorsListStyled>\n      {actors.map(actor => {\n        return (\n          <ActorsListItem key={actor.id}>\n            <ActorCard\n              name={actor.name}\n              character={actor.character}\n              profile={actor.profile_path}\n            />\n          </ActorsListItem>\n        );\n      })}\n    </ActorsListStyled>\n  );\n};\n\nActorsList.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string,\n      profile: PropTypes.string,\n    }).isRequired\n  ),\n};\n","export const actorsMapper = array => {\n  return array.map(({ id, name, profile_path, character }) => ({\n    id,\n    name,\n    profile_path,\n    character,\n  }));\n};\n","import styled from 'styled-components';\n\nexport const ActorsContainer = styled.div`\n  width: 60%;\n  margin: 20px auto;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 3px 3px 0px rgba(65, 105, 225, 0.12),\n    0px 3px 6px 0px rgba(65, 105, 225, 0.22),\n    0px 5px 10px 0px rgba(65, 105, 225, 0.2),\n    0px 8px 12px 1px rgba(65, 105, 225, 0.19);\n  background-color: rgba(65, 105, 225, 0.5);\n  border: 1px solid rgba(65, 105, 225, 0.03);\n`;\n","import { ActorsList } from 'components/ActorsList/ActorsList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieActors } from 'services/moviesApi';\nimport { actorsMapper } from 'utils/actorsMapper';\nimport { ActorsContainer } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function searchActors() {\n      setIsLoading(true);\n      const actorsArray = await fetchMovieActors(movieId);\n      const filtredActors = actorsMapper(actorsArray);\n\n      setActors(filtredActors);\n      setIsLoading(false);\n    }\n    searchActors();\n  }, [movieId]);\n  return (\n    <ActorsContainer>\n      {isLoading && <Loader />}\n\n      {actors.length === 0 && !isLoading ? (\n        <p>Sorry, there are no info about actors</p>\n      ) : (\n        <ActorsList actors={actors} />\n      )}\n    </ActorsContainer>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '68d4d93a5383af68a17fffcfb4da1936';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMovies() {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieActors(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["ActorImage","styled","ActorInfo","ActorName","Character","ActorCard","name","character","profile","src","alt","width","height","ActorsListStyled","ActorsListItem","ActorsList","actors","map","actor","profile_path","id","actorsMapper","array","ActorsContainer","useState","setActors","movieId","useParams","isLoading","setIsLoading","useEffect","fetchMovieActors","actorsArray","filtredActors","searchActors","Loader","length","API_KEY","fetchMovies","axios","params","api_key","response","data","results","console","error","fetchMovieById","fetchMovieByQuery","query","cast","fetchMovieReviews"],"sourceRoot":""}