{"version":3,"file":"static/js/156.605b7399.chunk.js","mappings":"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","sources":["components/MoviesItem/MovieItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","services/moviesApi.js","utils/moviesMapper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCard = styled.div`\n  position: relative;\n  border-bottom: 1px solid aqua;\n  border-radius: 20px;\n  text-align: center;\n  transition: box-shadow 500ms cubic-bezier(0.215, 0.61, 0.355, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 3px 3px 0px rgba(0, 255, 255, 0.12),\n      0px 3px 6px 0px rgba(0, 255, 255, 0.22),\n      0px 5px 10px 0px rgba(0, 255, 255, 0.2),\n      0px 8px 12px 1px rgba(0, 255, 255, 0.19);\n  }\n`;\n\nexport const Image = styled.img`\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n`;\n\nexport const MovieCardTitle = styled.p`\n  font-family: Road;\n  font-size: 20px;\n\n  color: #2d144c;\n  padding: 10px;\n`;\n\nexport const Rating = styled.p`\n  position: absolute;\n  top: 8px;\n  left: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n\n  border-radius: 50%;\n  background-color: aqua;\n  color: #545abe;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { MovieCard, Image, MovieCardTitle, Rating } from './MovieItem.styled';\n\nexport const MoviesItem = ({ id, title, poster, rating }) => {\n  return (\n    <MovieCard>\n      <Link to={`/movies/${id}`}>\n        <Rating>{rating.toFixed(2)}</Rating>\n        <Image\n          src={\n            poster\n              ? `https://image.tmdb.org/t/p/w500${poster}`\n              : `https://vcunited.club/wp-content/uploads/2020/01/No-image-available-2.jpg`\n          }\n          alt={title}\n        />\n        <MovieCardTitle>\n          {title.length >= 34 ? title.substring(0, 34) + '...' : title}\n        </MovieCardTitle>\n      </Link>\n    </MovieCard>\n  );\n};\n\nMoviesItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  poster: PropTypes.string,\n  rating: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  color: dark-blue;\n  font-size: 18px;\n\n  &:focus {\n    color: red;\n  }\n`;\n\nexport const MoviesGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 300px));\n  grid-gap: 16px;\n  justify-content: center;\n\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { MoviesItem } from 'components/MoviesItem/MoviesItem';\nimport { ListItem, MoviesGallery } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    movies && (\n      <>\n        <MoviesGallery>\n          {movies.map(({ title, id, poster_path, vote_average }) => (\n            <ListItem key={id}>\n              <MoviesItem\n                title={title}\n                id={id}\n                poster={poster_path}\n                rating={vote_average}\n              />\n            </ListItem>\n          ))}\n        </MoviesGallery>\n      </>\n    )\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      rating: PropTypes.number,\n      poster: PropTypes.string,\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled('h1')`\n  font-family: Dash;\n  font-size: 60px;\n  text-align: center;\n  padding-bottom: 20px;\n  color: #2d144c;\n`;\n","import { fetchMovies } from 'services/moviesApi';\nimport { useState, useEffect } from 'react';\nimport { HomeTitle } from './HomePage.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { moviesMapper } from 'utils/moviesMapper';\n\nconst HomePage = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function searchTrendMovies() {\n      setIsLoading(true);\n      const trendMoviesArray = await fetchMovies();\n      const filtredMovies = moviesMapper(trendMoviesArray);\n\n      setTrendMovies(filtredMovies);\n      setIsLoading(false);\n    }\n    searchTrendMovies();\n  }, []);\n\n  return (\n    trendMovies && (\n      <>\n        <HomeTitle>Trending today</HomeTitle>\n        {isLoading && <Loader />}\n        <MoviesList movies={trendMovies} />\n      </>\n    )\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '68d4d93a5383af68a17fffcfb4da1936';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMovies() {\n  try {\n    const response = await axios('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        id: movieId,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  try {\n    const response = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieActors(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export const moviesMapper = array => {\n  return array.map(\n    ({ id, title, poster_path, vote_average, release_date }) => ({\n      id,\n      title,\n      poster_path,\n      release_date,\n      vote_average,\n    })\n  );\n};\n"],"names":["MovieCard","styled","Image","MovieCardTitle","Rating","MoviesItem","id","title","poster","rating","to","toFixed","src","alt","length","substring","ListItem","MoviesGallery","MoviesList","movies","map","poster_path","vote_average","HomeTitle","useState","trendMovies","setTrendMovies","isLoading","setIsLoading","useEffect","fetchMovies","trendMoviesArray","filtredMovies","moviesMapper","searchTrendMovies","Loader","API_KEY","axios","params","api_key","response","data","results","console","error","fetchMovieById","movieId","fetchMovieByQuery","query","fetchMovieActors","cast","fetchMovieReviews","array","release_date"],"sourceRoot":""}